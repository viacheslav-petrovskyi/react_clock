{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","toLocaleTimeString","timerId","this","setInterval","setState","console","log","prevName","props","clockName","clearInterval","React","Component","App","clockVisible","visibleClock","changeName","Math","floor","random","className","disabled","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"6NAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,uBAGjCK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAbP,gCAgBE,SAAmBS,GACbL,KAAKM,MAAMC,YAAcF,EAASE,WAEpCJ,QAAQC,IAAR,qCAA0CC,EAASE,UAAnD,eAAmEP,KAAKM,MAAMC,cAnBpF,kCAuBE,WACMP,KAAKD,SACPS,cAAcR,KAAKD,WAzBzB,oBA6BE,WACE,OACE,oBAAG,UAAQ,OAAX,0BAEG,IACAC,KAAKL,MAAMC,YAlCpB,GAA2Ba,IAAMC,WCD3BC,E,4MACJhB,MAAQ,CACNiB,cAAc,EACdL,UAAW,G,EAGbM,aAAe,WACb,IAAQD,EAAiB,EAAKjB,MAAtBiB,aAER,EAAKV,SAAS,CACZU,cAAeA,K,EAInBE,WAAa,WACX,EAAKZ,SAAS,CACZK,UAAWQ,KAAKC,MAAsB,GAAhBD,KAAKE,a,4CAI/B,WACE,MAAoCjB,KAAKL,MAAjCY,EAAR,EAAQA,UAAWK,EAAnB,EAAmBA,aAEnB,OACE,sBAAKM,UAAU,MAAf,UACE,6BAAKX,IACJK,GAAgB,cAAC,EAAD,eAAWZ,KAAKL,QACjC,wBACEwB,SAAUP,EACVQ,KAAK,SACLC,QAASrB,KAAKa,aAHhB,wBAOA,wBACEM,UAAWP,EACXQ,KAAK,SACLC,QAASrB,KAAKa,aAHhB,wBAOA,wBACEM,UAAWP,EACXQ,KAAK,SACLC,QAASrB,KAAKc,WAHhB,gC,GAzCUL,IAAMC,WAqDTC,IC3DfW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3d8be049.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: number,\n};\n\ntype State = {\n  date: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date().toLocaleTimeString(),\n  };\n\n  timerId: NodeJS.Timer | undefined;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ date: new Date().toLocaleTimeString() });\n\n      // eslint-disable-next-line no-console\n      console.log(this.state.date);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevName: Props) {\n    if (this.props.clockName !== prevName.clockName) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevName.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <p data-cy=\"time\">\n        Current time:\n        {' '}\n        {this.state.date}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  clockVisible: boolean;\n  clockName: number;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    clockVisible: true,\n    clockName: 1,\n  };\n\n  visibleClock = () => {\n    const { clockVisible } = this.state;\n\n    this.setState({\n      clockVisible: !clockVisible,\n    });\n  };\n\n  changeName = () => {\n    this.setState({\n      clockName: Math.floor(Math.random() * 10),\n    });\n  };\n\n  render() {\n    const { clockName, clockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>{clockName}</h1>\n        {clockVisible && <Clock {...this.state} />}\n        <button\n          disabled={clockVisible}\n          type=\"button\"\n          onClick={this.visibleClock}\n        >\n          Show Clock\n        </button>\n        <button\n          disabled={!clockVisible}\n          type=\"button\"\n          onClick={this.visibleClock}\n        >\n          Hide Clock\n        </button>\n        <button\n          disabled={!clockVisible}\n          type=\"button\"\n          onClick={this.changeName}\n        >\n          Change Name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}